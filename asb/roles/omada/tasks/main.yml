---
# tasks to setup omada-controller

- name: Start omada
  block:
    - name: Create omada directories
      ansible.builtin.file:
        path: "{{ service_dir }}/omada/{{ item }}"
        state: directory
        recurse: true
      with_items:
        - "data"
        - "logs"

    - name: Pull/refresh container
      community.docker.docker_container:
        name: "{{ omada_controller_name|default('omada-controller') }}"
        image: "mbentley/omada-controller:{{ omada_version|default(latest) }}"
        pull: true
        volumes:
          - "{{ service_dir }}/omada/data:/opt/tplink/EAPController/data"
          - "{{ service_dir }}/omada/logs:/opt/tplink/EAPController/logs"
        ports:
          - "8088:8088"
          - "8043:8043"
          - "8843:8843"
          - "27001:27001/udp"
          - "29810:29810/udp"
          - "29811-29816:29811-29816"

        env:
          MANAGE_HTTP_PORT: "8088"
          MANAGE_HTTPS_PORT: "8043"
          PORTAL_HTTP_PORT: "8088"
          PORTAL_HTTPS_PORT: "8843"
          PGID: "{{ omada_uid|default(508) }}"
          PUID: "{{ omada_uid|default(508) }}"
          PORT_ADOPT_V1: "29812"
          PORT_APP_DISCOVERY: "27001"
          PORT_DISCOVERY: "29810"
          PORT_MANAGER_V1: "29811"
          PORT_MANAGER_V2: "29814"
          PORT_UPGRADE_V1: "29813"
          SHOW_SERVER_LOGS: "true"
          SHOW_MONGODB_LOGS: "false"
          SSL_CERT_NAME: "tls.crt"
          SSL_KEY_NAME: "tls.key"
          TZ: "{{ omada_timezone|default('Etc/UTC') }}"
        restart_policy: unless-stopped
        # memory: "{{ omada_memory|default('') }}"
        labels:
          traefik.enable: "false"
          traefik.http.routers.omada.rule: "Host(`{{ omada_controller_name }}.{{ domain_name }}`)"
          traefik.http.routers.omada.tls.certresolver: "lego"
          traefik.http.routers.omada.tls.domains[0].main: "{{ domain_name }}"
          traefik.http.routers.omada.tls.domains[0].sans: "*.{{ domain_name }}"
          traefik.http.services.omada.loadbalancer.server.port: "8043"
  when: omada_enabled is true

- name: Stop omada
  block:
    - name: Stop omada container
      community.general.docker_container:
        name: "{{ omada_controller_name|default('omada-controller') }}"
        state: absent
  when: omada_enabled is false
